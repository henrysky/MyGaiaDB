name: CI

on: [push]

jobs:
  test:
    if: "!contains(github.event.head_commit.message, '[ci skip]')"  # respect [ci skip] commit
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    env:
      MY_ASTRO_DATA: ${{ github.workspace }}/my_astro_data/
    steps:
      - uses: actions/checkout@v3
      # - name: Set up Python
      #   uses: actions/setup-python@v4
      #   with:
      #     python-version: "3.x"
      # - name: Install dependencies
      #   run: |
      #     sudo apt-get install -y libsqlite3-dev
      #     python -m pip install pytest pytest-order galpy gaiadr3-zeropoint mwdust
      #     python -m pip install .
      - uses: conda-incubator/setup-miniconda@v2
        with:
          channels: conda-forge
          auto-update-conda: true
      - name: Set environment variables on Mac OS
        if: matrix.os == 'macos-latest'
        shell: bash -l {0}
        run: |
          echo "CFLAGS=-I$CONDA_PREFIX/include" >> $GITHUB_ENV
          echo "LDFLAGS=-L$CONDA_PREFIX/lib" >> $GITHUB_ENV
          echo "REPAIR_LIBRARY_PATH=$CONDA_PREFIX/lib" >> $GITHUB_ENV
          echo "$CONDA_PREFIX/bin" >> $GITHUB_PATH
      - name: Set environment variables on Windows
        if: matrix.os == 'windows-latest'
        shell: bash -l {0}
        run: |
          echo "INCLUDE=$CONDA_PREFIX\\Library\\include" >> $GITHUB_ENV
          echo "LIB=$CONDA_PREFIX\\Library\\lib" >> $GITHUB_ENV
          echo "LIBPATH=$CONDA_PREFIX\\Library\\lib" >> $GITHUB_ENV
          echo "$CONDA_PREFIX\\Library\\bin" >> $GITHUB_PATH
          New-Item -ItemType directory -Force -Path $env:MY_ASTRO_DATA
      # - name: make data folder on Windows
      #   if: matrix.os == 'windows-latest'
      #   run: |
      #     New-Item -ItemType directory -Force -Path $env:MY_ASTRO_DATA
      - name: Install dependencies
        shell: bash -l {0}
        run: |
          conda install -y numpy astropy h5py pandas tqdm wheel pytest pytest-order galpy
          python -m pip install gaiadr3-zeropoint build mwdust
      - name: Install the package
        shell: bash -l {0}
        run: |
          python -m pip install .
      - name: Cache my astro data
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/my_astro_data/
          key: mygaiadb-${{ runner.os }}-2023march13
      - name: Test
        shell: bash -l {0}
        run: |
          python -m pytest -v -s tests/
      - name: Win-diagnose
        if: matrix.os == 'windows-latest'
        shell: bash -l {0}
        run: |
          dir $env:MY_ASTRO_DATA
          dir $env:MY_ASTRO_DATA/gaia_mirror
          dir $env:MY_ASTRO_DATA/2mass_mirror
